[build-system]
requires = ["hatchling", "hatch-vcs", "cmake", "ninja"]
build-backend = "hatchling.build"

[project]
name = "spatial-grouping-attention"
dynamic = ["version"]
description = "PyTorch Implementation of Spatial Grouping Attention Layer"
readme = "README.md"
license = { text = "BSD 3-Clause License" }
authors = [
    { name = "Jeff Rhoades", email = "rhoadesj@hhmi.org" },
]
maintainers = [
    { name = "Jeff Rhoades", email = "rhoadesj@hhmi.org" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["attention", "transformer", "rotary spatial embedding", "segmentation", "spatial grouping"]
requires-python = ">=3.10"
dependencies = [
    # Core dependencies
    "torch[opt-einsum]",
    "rotary-spatial-embeddings",
    "cmake",  # Required for building NATTEN
    "ninja",  # Helpful for building with CMake
    # "natten==0.17.5",  # This requires CMake
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "pre-commit>=2.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
]
lint = [
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/rhoadesScholar/spatial-grouping-attention"
Repository = "https://github.com/rhoadesScholar/spatial-grouping-attention"
Documentation = "https://github.com/rhoadesScholar/spatial-grouping-attention"
Issues = "https://github.com/rhoadesScholar/spatial-grouping-attention/issues"

# Versioning configuration using hatch-vcs for date-based versioning
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/spatial_grouping_attention"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/tests",
    "/.gitignore",
]

# Test configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--cov=spatial_grouping_attention",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-branch",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "cuda: marks tests as requiring CUDA",
    "natten: marks tests as requiring NATTEN library",
]

# Coverage configuration
[tool.coverage.run]
source = ["spatial_grouping_attention"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["spatial_grouping_attention"]
force_sort_within_sections = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
disallow_untyped_defs = false
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = false

[[tool.mypy.overrides]]
module = [
    # Add modules that don't have type stubs
    # "some_package.*",
]
ignore_missing_imports = true

# Ruff configuration (alternative to flake8)
[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # ignore unused imports in __init__.py

[tool.ruff.isort]
known-first-party = ["spatial_grouping_attention"]
